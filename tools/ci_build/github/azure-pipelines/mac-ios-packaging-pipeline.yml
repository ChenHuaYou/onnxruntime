trigger: none

parameters:
- name: IsReleaseBuild
  displayName: Is this a release build? Set this parameter to true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

jobs:
- job: IosPackaging
  displayName: "iOS Packaging Pipeline"

  pool:
    vmImage: "macOS-10.15"

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true
      architecture: 'x64'

  - script: |
      BASE_VERSION=$(cat VERSION_NUMBER)

      if [[ "${{ parameters.IsReleaseBuild }}" == "true" ]]; then
        VERSION=$BASE_VERSION
      else
        VERSION="${BASE_VERSION}-dev"
      fi

      echo "##vso[task.setvariable variable=ORT_POD_VERSION]${VERSION}"
    displayName: "Set version number"

  - script: |
      python tools/ci_build/github/apple/build_ios_framework.py \
        --build_dir $(Build.BinariesDirectory)/ios_framework \
        --include_ops_by_config tools/ci_build/github/android/mobile_package.required_operators.config \
        tools/ci_build/github/apple/default_mobile_ios_framework_build_settings.json
    displayName: "Build iOS framework"

  - script: |
      python tools/ci_build/github/apple/test_ios_packages.py \
        --fail_if_cocoapods_missing \
        --c_framework_dir $(Build.BinariesDirectory)/ios_framework/framework_out
    displayName: "Test iOS framework"

  - script: |
      python tools/ci_build/github/apple/c/assemble_c_pod_package.py \
        --staging-dir $(Build.BinariesDirectory)/staging/onnxruntime-mobile-c \
        --pod-version ${ORT_POD_VERSION} \
        --framework-info-file $(Build.BinariesDirectory)/ios_framework/framework_info.json \
        --framework-dir $(Build.BinariesDirectory)/ios_framework/framework_out/onnxruntime.framework
    displayName: "Assemble onnxruntime-mobile-c pod files"

  - script: |
      pod lib lint --verbose
    workingDirectory: "$(Build.BinariesDirectory)/staging/onnxruntime-mobile-c"
    displayName: "Check onnxruntime-mobile-c pod"

  - script: |
      python tools/ci_build/github/apple/objectivec/assemble_objc_pod_package.py \
        --staging-dir $(Build.BinariesDirectory)/staging/onnxruntime-mobile-objc \
        --pod-version ${ORT_POD_VERSION} \
        --framework-info-file $(Build.BinariesDirectory)/ios_framework/framework_info.json
    displayName: "Assemble onnxruntime-mobile-objc pod files"

  - script: |
      pod lib lint --verbose
    workingDirectory: "$(Build.BinariesDirectory)/staging/onnxruntime-mobile-objc"
    displayName: "Check onnxruntime-mobile-objc pod"

  - script: |
      set -e
      gem install jazzy
      jazzy --config objectivec/docs/jazzy_config.yaml \
        --output $(Build.BinariesDirectory)/staging/objc_api_docs \
        --module-version
    displayName: "Generate Objective-C API docs"

  - script: |
      set -e

      cd $(Build.BinariesDirectory)/staging/onnxruntime-mobile-c
      mv onnxruntime-mobile-c.podspec $(Build.ArtifactStagingDirectory)/onnxruntime-mobile-c.podspec
      zip -r $(Build.ArtifactStagingDirectory)/onnxruntime-mobile-c.zip *

      cd $(Build.BinariesDirectory)/staging/onnxruntime-mobile-objc
      mv onnxruntime-mobile-objc.podspec $(Build.ArtifactStagingDirectory)/onnxruntime-mobile-objc.podspec
      zip -r $(Build.ArtifactStagingDirectory)/onnxruntime-mobile-objc.zip *

      cd $(Build.BinariesDirectory)/staging/objc_api_docs
      zip -r $(Build.ArtifactStagingDirectory)/objc_api_docs.zip *

      cat > $(Build.ArtifactStagingDirectory)/readme.txt <<EOM
      Release TODO list:
      - upload pod zip files to publicly accessible URLs
      - update podspec sources to refer to those URLs
      - publish podspecs
      - update Objective-C API documentation
      EOM
    displayName: "Assemble artifacts"

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: ios_packaging_artifacts
    displayName: "Publish artifacts"
