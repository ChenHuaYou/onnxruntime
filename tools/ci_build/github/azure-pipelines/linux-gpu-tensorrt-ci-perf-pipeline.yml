
parameters:

- name: BuildORT
  displayName: Build ORT
  type: boolean
  default: true

- name: PostToDashboard
  displayName: Post to Dashboard
  type: boolean
  default: true
  
- name: RunDocker
  displayName: Run in Docker
  type: boolean
  default: true

- name: RunCustom
  displayName: Select Custom (Versions Below or set trtContainer Variable)
  type: boolean
  default: false

- name: TrtVersion
  displayName: TensorRT Version
  type: string
  values:
  - 7.2
  - 7.1

- name: CudaVersion
  displayName: CUDA Version
  type: string
  values:
  - 11.1
  - 11.0
  - 10.2

- name: ConfigureEPs
  displayName: Configure EPs (set epList variable - separate by spaces)
  type: boolean
  default: false

- name: PublishWheel
  displayName: Publish Wheel 
  type: boolean
  default: false

- name: ModelGroups
  type: object
  default: 
    - "onnx-zoo-models"
    - "many-models"
    - "partner-models"

jobs: 
- job: Linux_CI_GPU_TENSORRT_PERF
  pool: Linux-GPU-TensorRT-Perf 
  
  variables:
    - name: buildContainer
      ${{ if eq(parameters.RunCustom, false) }}:
        value: 1 
      ${{ if eq(parameters.RunCustom, true) }}:   
        ${{ if ne( $(trtContainer), 21.04) }}:
          value: 2
        ${{ if eq(parameters.TrtVersion, 7.1) }}:
          ${{ if eq(parameters.CUDAVersion, 11.0) }}:
            value: 3 #20.09
          ${{ if eq(parameters.CUDAVersion, 10.2) }}:
            value: 4 # 20.06
    - name: environment
      ${{ if eq(parameters.RunDocker, true) }}:
        value: docker.sh -d ort-$(branch) -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf 
      ${{ if ne(parameters.RunDocker, true) }}:
        value: machine.sh
    - name: with_arguments
      value: $(environment) -e "$(epList)"
  timeoutInMinutes: 3000 
      
  steps:

    - script: echo $(buildContainer)
    # - ${{ if eq(parameters.BuildORT, true) }}:

    #   - ${{ if eq(parameters.RunDocker, true) }}:
    #     - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/build_image.sh -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/Dockerfile.tensorrt-perf -b $(branch) -i ort-$(branch) -t $(trtContainer)'
    #       displayName: 'Build latest ORT Images'
    #       workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
          
    #   - ${{ if eq(parameters.RunDocker, false) }}:
    #     - script: 'python3 $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/ort_build_latest.py -b $(branch) -c /usr/local/cuda -o ~/repos/onnxruntime/ -t ~/TensorRT-7.2.2.3'
    #       displayName: 'Build latest ORT'
    #       workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
      
    # - ${{ if eq(parameters.PublishWheel, true) }}:
    
    #   - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/copy_wheel.sh -t $(trtContainer)'
    #     displayName: 'Copy Wheel from Docker'
    #     workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
    
    #   - script: 'OUTPUT=$(ls dist) && az storage blob upload --account-name anubiscustomerstorage  --account-key $(account-key) --container-name upload --file $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/dist/*.whl --name ort-trt-ep/$OUTPUT'
    #     displayName: 'Upload Wheel File'
    #     workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
      
    #   - task: PowerShell@2
    #     inputs:
    #       filePath: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/start_job.ps1'
    #       arguments: '-file_folder $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/dist -account_key $(account-key)'
    #     displayName: 'Start Anubis Job'

    # - ${{ each option in parameters.ModelGroups }}:
    #   - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf_$(with_arguments) -o ${{option}} -m $(${{option}})'
    #     displayName: '${{option}} perf'
    #     workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'

    # - ${{ if not(eq(length(parameters.ModelGroups), 0)) }}:
    #   - script: 'mkdir $(Build.SourcesDirectory)/Artifact && cp -r $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/result/ $(Build.SourcesDirectory)/Artifact'
    #     displayName: 'Prepare Artifacts'
    #     workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
    #   - task: PublishBuildArtifacts@1
    #     inputs:
    #       pathtoPublish: '$(Build.SourcesDirectory)/Artifact'
    #       artifactName: 'result'
    
    # - ${{ if eq(parameters.PostToDashboard, true) }}:
    #   - script: 'python3 $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/post.py -r $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/result -c $(Build.SourceVersion) -u "https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=$(Build.BuildId)" ' 
    #     displayName: 'Post to Dashboard'
    #     workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
    #     env:
    #       DASHBOARD_MYSQL_ORT_PASSWORD: $(dashboard-mysql-ort-password)

    - script: sudo rm -rf $(Agent.BuildDirectory)
      displayName: Clean build files (POSIX)
      condition: not(eq(variables['Agent.OS'], 'Windows_NT')) # and always()
      continueOnError: true  # continuing on error for this step, since linux build folder is somehow getting permission issue
