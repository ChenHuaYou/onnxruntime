parameters:

- name: BuildORT
  displayName: Build ORT
  type: boolean
  default: true

- name: RunOnnxZoo
  displayName: Onnx Zoo Models
  type: boolean
  default: true

- name: RunMany
  displayName: Many Models 
  type: boolean
  default: true

- name: RunPartner
  displayName: Partner Models
  type: boolean
  default: true

- name: PostToDashboard
  displayName: Post to Dashboard
  type: boolean
  default: true
  
- name: RunDocker
  displayName: Run in Docker (CUDA 11.0)
  type: boolean
  default: false

- name: RunSelected
  displayName: Selected Models (set ModelsPath variable)
  type: boolean
  default: false

- name: ConfigureEPs
  displayName: Configure EPs (set ep_list variable - separate by spaces)
  type: boolean
  default: false
  
- name: PublishWheel
  displayName: Publish Wheel 
  type: boolean
  default: false

jobs: 
- job: Linux_CI_GPU_TENSORRT_PERF
  pool: Linux-GPU-TensorRT-Perf 
  variables:
    - name: runenv
      ${{ if eq(parameters.RunDocker, true) }}:
        value: _docker.sh -d ort-$(branch) -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf
      ${{ if ne(parameters.RunDocker, true) }}:
        value: _machine.sh
    - name: args
      value: $(runenv) -e "$(ep_list)"
  timeoutInMinutes: 3000 
      
  steps:
    - ${{ if eq(parameters.BuildORT, true) }}:
      - ${{ if eq(parameters.RunDocker, true) }}:
        - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/build_image.sh -p $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/Dockerfile.tensorrt-perf -b $(branch) -i ort-$(branch) -t $(trtContainer)'
          displayName: 'Build latest ORT Images'
          workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
      - ${{ if eq(parameters.RunDocker, false) }}:
        - script: 'python3 $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/ort_build_latest.py -b $(branch) -c /usr/local/cuda -o ~/repos/onnxruntime/ -t ~/TensorRT-7.2.2.3'
          displayName: 'Build latest ORT'
          workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
    
    - ${{ if eq(parameters.PublishWheel, true) }}:
      # - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build/copy_wheel.sh -t $(trtContainer)'
      #   displayName: 'Copy Wheel from Docker'
      #   workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/build'
    
      # - script: 'OUTPUT=$(ls dist) && az storage blob upload --account-name anubiscustomerstorage  --account-key $(account-key) --container-name upload --file $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/dist/*.whl --name ort-trt-ep/$OUTPUT'
      #   displayName: 'Upload Wheel File'
      #   workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
      
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $wheel_file = Get-ChildItem /home/hcsuser/perf/dist
            echo $wheel_file
            # Add-Type -AssemblyName System.Web
            
            # $ort_trt_ep_pkg_blob_path = ep/$wheel_file
            # $expiredays = New-TimeSpan -Days 1
            # $end = (Get-Date) + $expiredays
            
            # $ort_trt_ep_pkg_sas_uri = az storage blob generate-sas -c upload -n $ort_trt_ep_pkg_blob_path --account-name anubiscustomerstorage --account-key $(account-key) --full-uri --permissions r --expiry $end.ToString("yyyy-MM-ddTHH:mmZ") --https-only
            
            # $ort_trt_ep_pkg_sas_uri = [System.Web.HttpUtility]::UrlDecode($ort_trt_ep_pkg_sas_uri[2])
            
            # $body_trt_perf_compare = @{
            #   "Name"="TRT_PERF_COMPARE";
            #   "Parameters" = @{
            #         “TRT_VERSION”="21.04";
            #         "ORT_TRT_EP_PKG_SAS_URI"=$ort_trt_ep_pkg_sas_uri};
            # }
            
            # $anubissvctesturl = https://anubispoc.azurewebsites.net/api/mlperf/jobs
            
            # Write-Host ($body_trt_perf_compare|ConvertTo-Json)
            
            # Invoke-RestMethod -Method 'Post' -Uri $anubissvctesturl -Body ($body_trt_perf_compare|ConvertTo-Json) -ContentType "application/json"
            # $body.Parameters

    - ${{ if eq(parameters.RunOnnxZoo, true) }}:
      - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf$(args) -o "onnx-zoo-models" '
        displayName: 'Onnx Zoo Models Perf'
        workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
        env:
          LD_LIBRARY_PATH : "/home/hcsuser/TensorRT-7.2.2.3/lib"
          
    - ${{ if eq(parameters.RunMany, true) }}:
      - script: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/run_perf$(args) -o "many-models" '
        displayName: 'Many Models Perf'
        workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
        env:
          LD_LIBRARY_PATH : "/home/hcsuser/TensorRT-7.2.2.3/lib"
    
    - ${{ if eq(parameters.PostToDashboard, true) }}:
      - script: 'python3 $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/post.py -r $(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/result -c $(Build.SourceVersion) -u "https://dev.azure.com/onnxruntime/onnxruntime/_build/results?buildId=$(Build.BuildId)" ' 
        displayName: 'Post to Dashboard'
        workingDirectory: '$(Build.SourcesDirectory)/onnxruntime/python/tools/tensorrt/perf/'
        env:
          DASHBOARD_MYSQL_ORT_PASSWORD: $(dashboard-mysql-ort-password)

    - script: sudo rm -rf $(Agent.BuildDirectory)
      displayName: Clean build files (POSIX)
      condition: not(eq(variables['Agent.OS'], 'Windows_NT')) # and always()
      continueOnError: true  # continuing on error for this step, since linux build folder is somehow getting permission issue
